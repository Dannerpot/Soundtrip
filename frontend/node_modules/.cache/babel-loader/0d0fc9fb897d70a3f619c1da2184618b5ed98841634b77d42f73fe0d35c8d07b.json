{"ast":null,"code":"import React,{useState}from'react';import'../App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SongInputForm=_ref=>{let{onSubmit}=_ref;const[songs,setSongs]=useState(['','','']);const[searchResults,setSearchResults]=useState([[],[],[]]);// Holds the dropdown results for each input field\n// Function to call Spotify Search API\nconst searchSpotify=async(query,index)=>{if(!query){setSearchResults(prevResults=>{const newResults=[...prevResults];newResults[index]=[];// Clear the dropdown for that input\nreturn newResults;});return;}try{const response=await fetch(`http://localhost:5000/search?q=${query}`);const data=await response.json();setSearchResults(prevResults=>{const newResults=[...prevResults];newResults[index]=data.tracks;// Store the track results for the input field\nreturn newResults;});}catch(error){console.error('Error searching Spotify:',error);}};// Handle song selection\nconst handleSongSelect=(songName,index)=>{setSongs(prevSongs=>{const newSongs=[...prevSongs];newSongs[index]=songName;return newSongs;});setSearchResults(prevResults=>{const newResults=[...prevResults];newResults[index]=[];// Clear dropdown when a song is selected\nreturn newResults;});};const handleSubmit=e=>{e.preventDefault();onSubmit(songs);// Pass the selected songs to the parent component (App.js)\n};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[songs.map((song,index)=>/*#__PURE__*/_jsxs(\"div\",{style:{position:'relative'},children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:song,onChange:e=>{const newSongs=[...songs];newSongs[index]=e.target.value;setSongs(newSongs);searchSpotify(e.target.value,index);// Search as the user types\n},placeholder:`Song ${index+1}`,autoComplete:\"off\"}),searchResults[index].length>0&&/*#__PURE__*/_jsx(\"ul\",{style:{position:'absolute',top:'100%',left:0,width:'100%',zIndex:1000},children:searchResults[index].map(track=>/*#__PURE__*/_jsxs(\"li\",{onClick:()=>handleSongSelect(track.name,index),style:{cursor:'pointer',padding:'5px',backgroundColor:'#fff',border:'1px solid #ccc'},children:[track.name,\" - \",track.artists.map(artist=>artist.name).join(', ')]},track.id))})]},index)),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",class:\"glow-on-hover\",children:\"Get Recommendations\"})]});};export default SongInputForm;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","SongInputForm","_ref","onSubmit","songs","setSongs","searchResults","setSearchResults","searchSpotify","query","index","prevResults","newResults","response","fetch","data","json","tracks","error","console","handleSongSelect","songName","prevSongs","newSongs","handleSubmit","e","preventDefault","children","map","song","style","position","type","value","onChange","target","placeholder","autoComplete","length","top","left","width","zIndex","track","onClick","name","cursor","padding","backgroundColor","border","artists","artist","join","id","class"],"sources":["C:/Users/soma ict/soundtrip/frontend/src/components/SongInputForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../App.css';\r\nconst SongInputForm = ({ onSubmit }) => {\r\n  const [songs, setSongs] = useState(['', '', '']);\r\n  const [searchResults, setSearchResults] = useState([[], [], []]);  // Holds the dropdown results for each input field\r\n\r\n  // Function to call Spotify Search API\r\n  const searchSpotify = async (query, index) => {\r\n    if (!query) {\r\n      setSearchResults((prevResults) => {\r\n        const newResults = [...prevResults];\r\n        newResults[index] = [];  // Clear the dropdown for that input\r\n        return newResults;\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/search?q=${query}`);\r\n      const data = await response.json();\r\n      setSearchResults((prevResults) => {\r\n        const newResults = [...prevResults];\r\n        newResults[index] = data.tracks;  // Store the track results for the input field\r\n        return newResults;\r\n      });\r\n    } catch (error) {\r\n      console.error('Error searching Spotify:', error);\r\n    }\r\n  };\r\n\r\n  // Handle song selection\r\n  const handleSongSelect = (songName, index) => {\r\n    setSongs((prevSongs) => {\r\n      const newSongs = [...prevSongs];\r\n      newSongs[index] = songName;\r\n      return newSongs;\r\n    });\r\n    setSearchResults((prevResults) => {\r\n      const newResults = [...prevResults];\r\n      newResults[index] = [];  // Clear dropdown when a song is selected\r\n      return newResults;\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit(songs);  // Pass the selected songs to the parent component (App.js)\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      {songs.map((song, index) => (\r\n        <div key={index} style={{ position: 'relative' }}>\r\n          <input\r\n            type=\"text\"\r\n            value={song}\r\n            onChange={(e) => {\r\n              const newSongs = [...songs];\r\n              newSongs[index] = e.target.value;\r\n              setSongs(newSongs);\r\n              searchSpotify(e.target.value, index);  // Search as the user types\r\n            }}\r\n            placeholder={`Song ${index + 1}`}\r\n            autoComplete=\"off\"\r\n          />\r\n          {/* Dropdown for song suggestions */}\r\n          {searchResults[index].length > 0 && (\r\n            <ul style={{ position: 'absolute', top: '100%', left: 0, width: '100%', zIndex: 1000 }}>\r\n              {searchResults[index].map((track) => (\r\n                <li\r\n                  key={track.id}\r\n                  onClick={() => handleSongSelect(track.name, index)}\r\n                  style={{ cursor: 'pointer', padding: '5px', backgroundColor: '#fff', border: '1px solid #ccc' }}\r\n                >\r\n                  {track.name} - {track.artists.map(artist => artist.name).join(', ')}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </div>\r\n      ))}\r\n      <button type=\"submit\" class='glow-on-hover'>Get Recommendations</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SongInputForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}