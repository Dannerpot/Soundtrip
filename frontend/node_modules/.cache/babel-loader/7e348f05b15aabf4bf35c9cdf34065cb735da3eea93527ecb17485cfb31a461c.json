{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\soma ict\\\\soundtrip\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport SongInputForm from './components/SongInputForm';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [recommendations, setRecommendations] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const getRecommendations = async songs => {\n    setLoading(true);\n    try {\n      const response = await fetch('http://localhost:5000/recommend', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          songs\n        })\n      });\n      const data = await response.json();\n      setRecommendations(data.recommendations); // Set recommendations from backend response\n    } catch (error) {\n      console.error(\"Error fetching recommendations:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"SoundTrip\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"header\",\n        children: \"Enter up to 3 songs to get music recommendations:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(SongInputForm, {\n        onSubmit: getRecommendations\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading recommendations...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this) : recommendations.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Recommendations:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: recommendations.map((song, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: song\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"wma6Uq3TWOV6usq0JKTLuD8J9Lo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","SongInputForm","jsxDEV","_jsxDEV","App","_s","recommendations","setRecommendations","loading","setLoading","getRecommendations","songs","response","fetch","method","headers","body","JSON","stringify","data","json","error","console","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","length","map","song","index","_c","$RefreshReg$"],"sources":["C:/Users/soma ict/soundtrip/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport SongInputForm from './components/SongInputForm';\nimport './App.css'\nconst App = () => {\n  const [recommendations, setRecommendations] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const getRecommendations = async (songs) => {\n    setLoading(true);\n    try {\n      const response = await fetch('http://localhost:5000/recommend', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ songs }),\n      });\n\n      const data = await response.json();\n      setRecommendations(data.recommendations);  // Set recommendations from backend response\n    } catch (error) {\n      console.error(\"Error fetching recommendations:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div >\n      <div>\n      <h1 className='title'>SoundTrip</h1>\n      <p className='header'>Enter up to 3 songs to get music recommendations:</p>\n      <SongInputForm onSubmit={getRecommendations} />\n\n      {loading ? (\n        <p>Loading recommendations...</p>\n      ) : (\n        recommendations.length > 0 && (\n          <div>\n            <h2>Recommendations:</h2>\n            <ul>\n              {recommendations.map((song, index) => (\n                <li key={index}>{song}</li>\n              ))}\n            </ul>\n          </div>\n        )\n      )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAO,WAAW;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAClB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMU,kBAAkB,GAAG,MAAOC,KAAK,IAAK;IAC1CF,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;QAC9DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEP;QAAM,CAAC;MAChC,CAAC,CAAC;MAEF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClCb,kBAAkB,CAACY,IAAI,CAACb,eAAe,CAAC,CAAC,CAAE;IAC7C,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACzD,CAAC,SAAS;MACRZ,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEN,OAAA;IAAAoB,QAAA,eACEpB,OAAA;MAAAoB,QAAA,gBACApB,OAAA;QAAIqB,SAAS,EAAC,OAAO;QAAAD,QAAA,EAAC;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpCzB,OAAA;QAAGqB,SAAS,EAAC,QAAQ;QAAAD,QAAA,EAAC;MAAiD;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC3EzB,OAAA,CAACF,aAAa;QAAC4B,QAAQ,EAAEnB;MAAmB;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAE9CpB,OAAO,gBACNL,OAAA;QAAAoB,QAAA,EAAG;MAA0B;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,GAEjCtB,eAAe,CAACwB,MAAM,GAAG,CAAC,iBACxB3B,OAAA;QAAAoB,QAAA,gBACEpB,OAAA;UAAAoB,QAAA,EAAI;QAAgB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzBzB,OAAA;UAAAoB,QAAA,EACGjB,eAAe,CAACyB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC/B9B,OAAA;YAAAoB,QAAA,EAAiBS;UAAI,GAAZC,KAAK;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAC3B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAER;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACvB,EAAA,CAhDID,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAkDT,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}